{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _parseError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getMassCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._parseError(res));\n  }\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.fieldMesto,\n        link: data.fieldSrc\n      })\n    }).then(res => this._parseError(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseError(res));\n  }\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._parseError(res));\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._parseError(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._parseError(res));\n  }\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.fieldName,\n        about: data.fieldJob\n      })\n    }).then(res => this._parseError(res));\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.fieldAvatarSrc\n      })\n    }).then(res => this._parseError(res));\n  }\n}\nexport default new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\n  headers: {\n    authorization: '1ce13fac-ab02-437f-bb39-64ceea4d3ebd',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_parseError","res","ok","json","Promise","reject","status","getMassCards","fetch","then","addCard","data","method","body","JSON","stringify","name","fieldMesto","link","fieldSrc","deleteCard","cardId","setLike","deleteLike","getUserInfo","editUserInfo","fieldName","about","fieldJob","editAvatar","avatar","fieldAvatarSrc","authorization"],"sources":["C:/Program Files/hello-world/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _parseError(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`)\r\n  }\r\n\r\n  getMassCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.fieldMesto,\r\n        link: data.fieldSrc\r\n      })\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  setLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  editUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.fieldName,\r\n        about: data.fieldJob\r\n      })\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.fieldAvatarSrc\r\n      })\r\n    })\r\n      .then(res => this._parseError(res));\r\n  }\r\n}\r\n  export default new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-52',\r\n    headers: {\r\n      authorization: '1ce13fac-ab02-437f-bb39-64ceea4d3ebd',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}